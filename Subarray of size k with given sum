// CPP program to check if any Subarray of size  
// K has a given Sum 
#include <iostream> 

using namespace std; 

  
// Function to check if any Subarray of size K 
// has a  given Sum 

bool checkSubarraySum(int arr[], int n, 

                      int k, int sum) 
{ 

    // Consider all blocks starting with i. 

    for (int i = 0; i < n - k + 1; i++) { 

  

        int current_sum = 0; 

  

        // Consider each subarray of size k 

        for (int j = 0; j < k; j++) 

            current_sum = current_sum + arr[i + j]; 

  

        if (current_sum == sum)  

            return true;         

    } 

    return false; 
} 
Time Complexity: O(n * k)

An efficient solution is to check sliding window technique and
 simultaneously check if the sum is equal to the given sum.O(n)
 
 bool checkSubarraySum(int arr[], int n, 
                      int k, int sum) 
{ 
    // Check for first window 
    int curr_sum = 0; 
    for (int i=0; i<k; i++) 
       curr_sum += arr[i];    
    if (curr_sum == sum) 
        return true; 
  
    // Consider remaining blocks ending with j 
    for (int j = k; j < n; j++) { 
        curr_sum = curr_sum + arr[j] - arr[j-k]; 
        if (curr_sum == sum)  
            return true;         
    } 
    return false; 
} 


