class Solution {
public:
    // Time: O(n)
    // Space: O(1)
    void nextPermutation(vector<int>& nums) {
        int n = nums.size();
        int i = n - 2;
        while (i >= 0 && nums[i] >= nums[i + 1])
            --i;
        
        if (i >= 0) {
            int j = n - 1;
            while (nums[j] <= nums[i])
                --j;
            swap(nums[i], nums[j]);
        }
        reverse(nums.begin() + i + 1, nums.end());
    }
};

for(k=n-2;k>=0;k++){
  if(nums[k]<nums[k+1])
    break;
    
  if(k<0)reverse(nums.begin(),nums.end());// edge case when whole array is in decreasing order
  
  else
  for(l=n-1;l<k;l--)
      swap(nums[l],nums[k]);
      
   reverse(nums.begin()+k+1,nums.end);
